{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mdwa-datafactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Get Metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "mdwa_datalake_delimited_parameter",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "DemoSales.csv"
								}
							},
							"fieldList": [
								"columnCount",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Check File Metadata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "Audit.CheckFileMetadata",
							"storedProcedureParameters": {
								"ColumnCount": {
									"value": {
										"value": "@activity('Get Metadata').output.columnCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Filename": {
									"value": {
										"value": "@activity('Get Metadata').output.itemName",
										"type": "Expression"
									},
									"type": "test"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "mdwa_control_database",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"SchemaName": {
						"type": "string",
						"defaultValue": "Stage"
					},
					"TableName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "DemoSales.csv"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pause Synapse Analytics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Pause Synapse Analytics",
						"description": "",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Obtain Bearer Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/d6c9085f-1bef-4f0b-85e8-a30400cbbd0c/resourceGroups/moderndw/providers/Microsoft.Sql/servers/mdwa-sqlserver.database.windows.net/databases/mdwa-sqlwarehouse/pause?api-version=2017-10-01-preview ",
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat('Bearer ', activity('Obtain Bearer Token').output.access_token)",
									"type": "Expression"
								},
								"Content-Type": "application/json"
							}
						}
					},
					{
						"name": "Obtain Bearer Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://login.microsoftonline.com/6771b25a-f4d8-4f9f-9fcc-e7468a5cdc46/oauth2/token",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": "grant_type=client_credentials&client_id=320a7909-de06-4b4c-bd59-5523947e9319&client_secret=-7]345RybyzoGoQUAjedEPuvMazHjo@@&resource=https%3A%2F%2Fmanagement.azure.com"
						}
					}
				],
				"parameters": {
					"InstanceName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Cleansing Data Flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Cleansing Data Flow",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Cleansing Data Flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DirtyCSVFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mdwa_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "DemoSales.csv",
						"folderPath": "RAW",
						"fileSystem": "datalake"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesSystemId",
						"type": "String"
					},
					{
						"name": "SalesPerson",
						"type": "String"
					},
					{
						"name": "SalesAmount",
						"type": "String"
					},
					{
						"name": "ProductName",
						"type": "String"
					},
					{
						"name": "ProductId",
						"type": "String"
					},
					{
						"name": "CustomerId",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PartitionedCsvFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mdwa_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "RAW/Partitioned",
						"fileSystem": "datalake"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesSystemId",
						"type": "String"
					},
					{
						"name": "SalesPerson",
						"type": "String"
					},
					{
						"name": "SalesAmount",
						"type": "String"
					},
					{
						"name": "ProductName",
						"type": "String"
					},
					{
						"name": "ProductId",
						"type": "String"
					},
					{
						"name": "CustomerId",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mdwa_sql_database_simple')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mdwa_azure_sql_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesSystemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "SalesAmount",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "ProductName",
						"type": "nvarchar"
					},
					{
						"name": "ProductId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cleansing Data Flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DirtyCSVFile",
								"type": "DatasetReference"
							},
							"name": "DirtyCSVFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "mdwa_sql_database_simple",
								"type": "DatasetReference"
							},
							"name": "DirtyCSVFileSink"
						}
					],
					"transformations": [
						{
							"name": "TrimColumns"
						},
						{
							"name": "StandardiseNulls"
						}
					],
					"script": "source(output(\n\t\tSalesSystemId as string,\n\t\tSalesPerson as string,\n\t\tSalesAmount as string,\n\t\tProductName as string,\n\t\tProductId as string,\n\t\tCustomerId as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> DirtyCSVFile\nDirtyCSVFile derive(SalesSystemId = trim(SalesSystemId),\n\t\tSalesPerson = trim(SalesPerson),\n\t\tSalesAmount = trim(SalesAmount),\n\t\tProductName = trim(ProductName),\n\t\tProductId = trim(ProductId),\n\t\tCustomerId = trim(CustomerId)) ~> TrimColumns\nTrimColumns derive(SalesSystemId = toInteger(replace(replace(SalesSystemId, ' ',''),'Unknown','')),\n\t\tSalesPerson = replace(replace(SalesPerson, ' ',''),'Unknown',''),\n\t\tSalesAmount = toDecimal(replace(replace(SalesAmount, ' ',''),'Unknown','')),\n\t\tProductName = replace(replace(ProductName, ' ',''),'Unknown',''),\n\t\tProductId = toInteger(replace(replace(ProductId, ' ',''),'Unknown','')),\n\t\tCustomerId = toInteger(replace(replace(CustomerId, ' ',''),'Unknown',''))) ~> StandardiseNulls\nStandardiseNulls sink(input(\n\t\tSalesSystemId as integer,\n\t\tSalesPerson as string,\n\t\tSalesAmount as decimal(10,2),\n\t\tProductName as string,\n\t\tProductId as integer,\n\t\tCustomerId as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table') ~> DirtyCSVFileSink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DirtyCSVFile')]",
				"[concat(variables('factoryId'), '/datasets/mdwa_sql_database_simple')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "mdwa_sql_database_simple",
								"type": "DatasetReference"
							},
							"name": "SQLDataSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PartitionedCsvFile",
								"type": "DatasetReference"
							},
							"name": "PartitionedDataSet"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tSalesSystemId as integer,\n\t\tSalesPerson as string,\n\t\tSalesAmount as decimal(10,2),\n\t\tProductName as string,\n\t\tProductId as integer,\n\t\tCustomerId as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SQLDataSource\nSQLDataSource sink(input(\n\t\tSalesSystemId as string,\n\t\tSalesPerson as string,\n\t\tSalesAmount as string,\n\t\tProductName as string,\n\t\tProductId as string,\n\t\tCustomerId as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tpartitionBy('key',\n\t\t0,\n\t\tCustomerId\n\t)) ~> PartitionedDataSet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mdwa_sql_database_simple')]",
				"[concat(variables('factoryId'), '/datasets/PartitionedCsvFile')]"
			]
		}
	]
}